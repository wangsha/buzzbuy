<?php

/**
 * Implementation of hook_schema).
 */
function blippy_schema() {
  
  $schema['blippy_account'] = array(
    'description' => t("Stores information on specific Twitter user accounts."),
    'fields' => array(
      'blippy_uid' => array(
        'description' => t("The unique identifier of the {blippy_account}."),
        'type' => 'numeric',
        'unsigned' => TRUE,
        'precision' => 20,
        'scale' => 0,        
        'not null' => TRUE,
        'default' => 0
      ),
      'uid' => array(
        'description' => t("The {users}.uid of the owner of this account"),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'big',
        'not null' => TRUE,
      ),
      'username' => array(
        'description' => t("The unique login name of the {blippy_account} user."),
        'type' => 'varchar',
        'length' => 255
      ),
      'oauth_token' => array(
        'description' => t('The token_key for oauth-based access.'),
        'type' => 'varchar',
        'length' => 64,
      ),
      'oauth_token_secret' => array(
        'description' => t('The token_secret for oauth-based access.'),
        'type' => 'varchar',
        'length' => 64,
      ),
      'name' => array(
        'description' => t("The full name of the {blippy_account} user."),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => ''
      ),
      'about' => array(
        'description' => t("The description/biography associated with the {blippy_account}."),
        'type' => 'varchar',
        'length' => 255
      ),
      'location' => array(
        'description' => t("The location of the {blippy_account}'s owner."),
        'type' => 'varchar',
        'length' => 255
      ),
      'followers_count' => array(
        'description' => t("The number of users following this {blippy_account}."),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),
      'following_count' => array(
        'description' => t("The number of users this {blippy_account} is following."),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),      
      'reviews_count' => array(
        'description' => t("The total number of reviews performed by a user"),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),      
      'purchases_count' => array(
        'description' => t("The  number of purchases a user has made."),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0
      ),      
      'profile_url' => array(
        'description' => t("The url of the {blippy_account}'s home page."),
        'type' => 'varchar',
        'length' => 255
      ),
      'profile_image_url' => array(
        'description' => t("The url of the {blippy_account}'s profile image."),
        'type' => 'varchar',
        'length' => 255
      ),
      'protected' => array(
        'description' => t("Boolean flag indicating whether the {blippy_account}'s posts are publicly accessible."),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
      'verified' => array(
        'description' => t("Indicates if a user is verified."),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1
      ),
      'created_time' => array(
        'description' => t("Date and time the {blippy_account} was created."),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => ''
      ),
      'created_at' => array(
        'description' => t("A duplicate of {blippy_account}.created_at in UNIX timestamp format."),
        'type' => 'int',
        'not null' => TRUE
      ),
    ),
    'indexes' => array('username' => array('username')),
    'primary key' => array('blippy_uid'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function blippy_install() {
  // Create tables.
  drupal_install_schema('blippy');

  // Set the weight to 3, making it heaving than Pathauto.
  db_query("UPDATE {system} SET weight = 4 WHERE name = 'blippy'");
}


function blippy_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('blippy');
}
